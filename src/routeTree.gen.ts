/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as SplatImport } from './routes/$'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileUserIdImport } from './routes/profile/$userId'
import { Route as ArticlesActionImport } from './routes/articles/action'
import { Route as ArticlesArticleIdImport } from './routes/articles/$articleId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const SplatRoute = SplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUserIdRoute = ProfileUserIdImport.update({
  id: '/profile/$userId',
  path: '/profile/$userId',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesActionRoute = ArticlesActionImport.update({
  id: '/articles/action',
  path: '/articles/action',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesArticleIdRoute = ArticlesArticleIdImport.update({
  id: '/articles/$articleId',
  path: '/articles/$articleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/articles/$articleId': {
      id: '/articles/$articleId'
      path: '/articles/$articleId'
      fullPath: '/articles/$articleId'
      preLoaderRoute: typeof ArticlesArticleIdImport
      parentRoute: typeof rootRoute
    }
    '/articles/action': {
      id: '/articles/action'
      path: '/articles/action'
      fullPath: '/articles/action'
      preLoaderRoute: typeof ArticlesActionImport
      parentRoute: typeof rootRoute
    }
    '/profile/$userId': {
      id: '/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof ProfileUserIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/articles/action': typeof ArticlesActionRoute
  '/profile/$userId': typeof ProfileUserIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/articles/action': typeof ArticlesActionRoute
  '/profile/$userId': typeof ProfileUserIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/articles/action': typeof ArticlesActionRoute
  '/profile/$userId': typeof ProfileUserIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/about'
    | '/login'
    | '/signup'
    | '/articles/$articleId'
    | '/articles/action'
    | '/profile/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/about'
    | '/login'
    | '/signup'
    | '/articles/$articleId'
    | '/articles/action'
    | '/profile/$userId'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/about'
    | '/login'
    | '/signup'
    | '/articles/$articleId'
    | '/articles/action'
    | '/profile/$userId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  ArticlesArticleIdRoute: typeof ArticlesArticleIdRoute
  ArticlesActionRoute: typeof ArticlesActionRoute
  ProfileUserIdRoute: typeof ProfileUserIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ArticlesArticleIdRoute: ArticlesArticleIdRoute,
  ArticlesActionRoute: ArticlesActionRoute,
  ProfileUserIdRoute: ProfileUserIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$",
        "/about",
        "/login",
        "/signup",
        "/articles/$articleId",
        "/articles/action",
        "/profile/$userId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/articles/$articleId": {
      "filePath": "articles/$articleId.tsx"
    },
    "/articles/action": {
      "filePath": "articles/action.tsx"
    },
    "/profile/$userId": {
      "filePath": "profile/$userId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
